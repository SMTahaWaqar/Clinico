name: Deploy Next.js application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Create .env file
        run: echo "NEXT_PUBLIC_PROJECT_ID=${{ secrets.NEXT_PUBLIC_PROJECT_ID }}" >> .env && echo "NEXT_PUBLIC_API_KEY=${{ secrets.NEXT_PUBLIC_API_KEY }}" >> .env && echo "NEXT_PUBLIC_DATABASE_ID=${{ secrets.NEXT_PUBLIC_DATABASE_ID }}" >> .env && echo "NEXT_PUBLIC_PATIENT_COLLECTION_ID=${{ secrets.NEXT_PUBLIC_PATIENT_COLLECTION_ID }}" >> .env && echo "NEXT_PUBLIC_DOCTOR_COLLECTION_ID=${{ secrets.NEXT_PUBLIC_DOCTOR_COLLECTION_ID }}" >> .env && echo "NEXT_PUBLIC_APPOINTMENT_COLLECTION_ID=${{ secrets.NEXT_PUBLIC_APPOINTMENT_COLLECTION_ID }}" >> .env && echo "NEXT_PUBLIC_BUCKET_ID=${{ secrets.NEXT_PUBLIC_BUCKET_ID }}" >> .env && echo "NEXT_PUBLIC_ENDPOINT=${{ secrets.NEXT_PUBLIC_ENDPOINT }}" >> .env && echo "SITE_URL=${{ secrets.SITE_URL }}" >> .env
      - name: Build docker image
        run: docker build -t tahadeadpoolxd/unitsec-app .
      - name: Login to docker hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Publish image to docker hub
        run: docker push tahadeadpoolxd/unitsec-app:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub
        run: docker pull tahadeadpoolxd/unitsec-app:latest
      - name: Delete old container
        run: docker rm -f unitsec-app-container
      - name: Run docker container
        run: docker run -d -p 3000:3000 --name unitsec-app-container tahadeadpoolxd/unitsec-app
